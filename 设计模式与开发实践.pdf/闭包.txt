作用域: 函数创建 -> 函数作用域 函数里面可以看见外面的变量 函数外面则无法看见函数里面的变量
变量的生命周期: 全局变量的生存周期当然是永久的，除非我们主动销毁这个全局变量。函数内用 var 关键字声明的局部变量来说，当退出函数时，这些局部变量即失去了它们的价值，它们都会随着函数调用的结束而被销毁。
## 既然局部变量所在的环境还能被外界
访问，这个局部变量就有了不被销毁的理由。在这里产生了一个闭包结构，局部变量的生命看起
来被延续了。##


独立出来的小函数有助于代码复用，如果这些
小函数有一个良好的命名，它们本身也起到了注释的作用。如果这些小函数不需要在程序的其他
地方使用，最好是把它们用闭包封闭起来。

var mult = (function() {
  var _cache = {};
  var _calc = function(n, srt) {
    var n = arguments[0];
    var srt = arguments[1] || 1;
   
    if (n <= 1) {
      return srt;
    }
    return _calc(n -1, srt *= n) 
  };
  
  return function() {
    var n = arguments[0];
    
    return _cache[n] ? _cache[n] : _cache[n] =  _calc.apply(this, arguments);
  };
})();